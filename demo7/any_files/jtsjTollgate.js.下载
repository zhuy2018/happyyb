var clientWidth = window.screen.width;
//分页处理参数
var totalPage = 1;//总页数（初始为1）
var pageSize = 7;//每页码显示几列数据(第一列不算)
var currentPage = 1;	//当前页（初始为1）
var showStar = 1;//显示分页起始页（初始为1）
var pageStr='';//分页String
//报表导出变量
var etstrO = {};

var figureRefresh = true; //每次翻页不用刷新图形
var st; //开始时间
var et; //结束时间
var sjidu; //开始季度
var title; //标题
var titles; //标题 


var areaname;
var jxsname; //高速路口 - 多选

//结果集一
var count; //数量
var resultdata;//主景点后台查询后的结果数据集
var result;
var tabledata;

//结果集二
var count2; //数量
var resultdata2;//主景点后台查询后的结果数据集
var result2;
var tabledata2;


jQuery(function($) {
if(scenicFlow != null && scenicFlow != ""){
	resultdata = scenicFlow;
	st = $('#displaytimevalue').html();
	areaname = $('#displayareavalue').html();
	//控制分辨率
	if(clientWidth > 1800){
		title = '<span style="font-size: 24px;font-weight:bold;">【'+areaname+'】'+st+'高速路口统计分析图(分)</span>';
		titles = '【'+areaname+'】'+st+'高速路口统计分析图(分)';
	}else{
		title = '<b>【'+areaname+'】'+st+'高速路口统计分析图(分)</b>';
		titles = '【'+areaname+'】'+st+'高速路口统计分析图(分)';
	}
	result = resultdata.result; //数据
	count = resultdata.count; //数量
	
	//分
	showChartMinutes();
}
});

getData = function(){
	figureRefresh = true;
	var gsNameTemp = '';
	if(timeId == '1005'){
		st = $('#displaytimevalue').html(); //分的时间
	}else{
		st = startTime;	//其它粒度的时间
	}
	et = endTime;
	
	if(timeId == '1005'){
		if(redio_xzqhpm != null && redio_xzqhpm != ''){ //如果选择了区域，就必须选择收费站
			if(redio_xzqhpm == '汇总' ){
				$('#displayareavalue').html(redio_xzqhpm); //控件显示
				areaname = $('#displayareavalue').html(); //页面
			}else{
				if((redio_gslkpm == '' || redio_gslkpm == null)){
//					layer.alert('请选择收费站！');
//					return;
					
					gsNameTemp = ''; //不传收费站
					$('#displayareavalue').html(redio_xzqhpm); //控件
					areaname = $('#displayareavalue').html(); //页面
				}else{
					$('#displayareavalue').html(redio_gslkpm); //控件显示
					areaname = $('#displayareavalue').html(); //页面
					gsNameTemp = "'"+redio_gslkpm+"'"; //传入后台
				}
			}
		}else{ //什么都没选， 就默认德胜收费站
//			redio_gslkpm = '德胜收费站'; //前台
//			gsNameTemp = "'德胜收费站'"; //传入后台
			
			gsNameTemp = ''; //不用传收费站
			redio_xzqhpm = '汇总';//默认汇总
		}
		
	}else{
//		alert("区域："+select_xzqhpm+" --- "+jxsname+" -- "+select_gslkpm);
		if(select_xzqhpm != null && select_xzqhpm != ''){
			if(select_xzqhpm == '汇总'){
				$('#Mdisplayareavalue').html(select_xzqhpm);
				areaname = $('#Mdisplayareavalue').html(); //页面
				redio_xzqhpm = select_xzqhpm; //传入后台
			}else{
				if(jxsname != '' && jxsname != null){ //选择了
					if(select_gslkpm == null || select_gslkpm == ''){ //再次判断是否没有选择
						gsNameTemp = ''; //不传入后台
						redio_xzqhpm = select_xzqhpm; //传入后台
						$('#Mdisplayareavalue').html(select_xzqhpm);
					}else{
						$('#Mdisplayareavalue').html(select_gslkpm);
						areaname = $('#Mdisplayareavalue').html(); //页面
						redio_xzqhpm = select_xzqhpm; //传入后台
						gsNameTemp = jxsname;//传入后台
					}
					
				}else{ //选择了区域， 收费站没选，就查全部
					gsNameTemp = ''; //不传入后台
					redio_xzqhpm = select_xzqhpm; //传入后台
					$('#Mdisplayareavalue').html(select_xzqhpm);
				}
			}
		}else{ //什么都没选，包括区域，默认汇总
//			select_gslkpm = '汇总'; //前台
//			redio_xzqhpm = select_xzqhpm;  //传入后台
//			gsNameTemp = "'汇总'"; //传入后台
			
			gsNameTemp = ''; //不传收费站
			redio_xzqhpm = '汇总'; //传入后台
			$('#displayareavalue').html(redio_xzqhpm); //控件显示
		}
	}
	
//	alert(st+" -- "+et+" -- 季度："+startTime2+" "+endTime2+" -- 粒度："+timeId+" --- "+areaname+" -- "+gsNameTemp);
	
	var jiduTemp;
	var jiduEndTemp;
	if(startTime2 == '01'){
		jiduTemp = '第一季度';
	}else if(startTime2 == '04'){
		jiduTemp = '第二季度';
	}else if(startTime2 == '07'){
		jiduTemp = '第三季度';
	}else if(startTime2 == '10'){
		jiduTemp = '第四季度';
	}
	
	//必须分开写：
	if(endTime2 == '01'){
		jiduEndTemp = '第一季度';
	}else if(endTime2 == '04'){
		jiduEndTemp = '第二季度';
	}else if(endTime2 == '07'){
		jiduEndTemp = '第三季度';
	}else if(endTime2 == '10'){
		jiduEndTemp = '第四季度';
	}
	//控制分辨率
	if(clientWidth > 1800){
		if(timeId == '1005'){ //分
			title = '<span style="font-size: 24px;font-weight:bold;">【'+areaname+'】'+st+'高速路口统计分析图(分)</span>';
			titles = '【'+areaname+'】'+st+'高速路口统计分析图(分)';
		}else if(timeId == '1006'){ //日
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'至'+et+'高速路口统计分析图(日)</span>';
			titles = st+'至'+et+'高速路口统计分析图(日)';
		}else if(timeId == '1007'){ //月
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'月至'+et+'月高速路口统计分析图(月)</span>';
			titles = st+'月至'+et+'月高速路口统计分析图(月)';
		}else if(timeId == '1008'){ //季
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'年【'+jiduTemp+'】至【'+jiduEndTemp+'】高速路口统计分析图(季)</span>';
			titles = st+'年【'+jiduTemp+'】至【'+jiduEndTemp+'】高速路口统计分析图(季)';
		}else if(timeId == '1009'){ //年
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'年至'+et+'年高速路口统计分析图(年)</span>';
			titles = st+'年至'+et+'年高速路口统计分析图(年)';
		}else{
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'至'+et+'高速路口统计分析图(周)</span>';
			titles = st+'至'+et+'高速路口统计分析图(周)';
		}
	}else{
		if(timeId == '1005'){ //分
			title = '<b>【'+areaname+'】'+st+'高速路口统计分析图(分)</b>';
			titles = '【'+areaname+'】'+st+'高速路口统计分析图(分)';
		}else if(timeId == '1006'){ //日
			title = '<b>'+st+'至'+et+'高速路口统计分析图(日)</b>';
			titles = st+'至'+et+'高速路口统计分析图(日)';
		}else if(timeId == '1007'){ //月
			title = '<b>'+st+'月至'+et+'月高速路口统计分析图(月)</b>';
			titles = st+'月至'+et+'月高速路口统计分析图(月)';
		}else if(timeId == '1008'){ //季
			title = '<b>'+st+'年【'+jiduTemp+'】至【'+jiduEndTemp+'】高速路口统计分析图(季)</b>';
			titles = st+'年【'+jiduTemp+'】至【'+jiduEndTemp+'】高速路口统计分析图(季)';
		}else if(timeId == '1009'){ //年
			title = '<b>'+st+'年至'+et+'年高速路口统计分析图(年)</b>';
			titles = st+'年至'+et+'年高速路口统计分析图(年)';
		}else{
			title = '<b>'+st+'至'+et+'高速路口统计分析图(周)</b>';
			titles = st+'至'+et+'高速路口统计分析图(周)';
		}
	}
	if(timeId == '1005'){ //选的是分钟
		st = $('#startTime1005').val();
		et = $('#startTime1005').val();
	}
	
	var url = 'kpi/jtsjTollgate/queryJtsjTollgateList.do';
	var postData = {"timeStart":st,"timeEnd":et,"timeId":timeId,"sjidu":startTime2,"ejidu":endTime2,"gsname":gsNameTemp,"xzqh":redio_xzqhpm};
	$.post(url,postData,function(data){
		if(data != null){
			if(timeId == '1005'){ //分钟
				resultdata = data.scenis;
				result = resultdata.result; //数据
				count = resultdata.count; //数量
				showChartMinutes();
			}else{//日  、月、季、年、周
				resultdata = data.scenis.data;
				resultdata2 = data.scenis.data2;
				
				//1:
				count = resultdata.count; //数量
				result = resultdata.result; //数据
				tabledata = resultdata.tabledata;
				//2：
				count2 = resultdata2.count2;
				result2 = resultdata2.result2;
				tabledata2 = resultdata2.tabledata2;
				showChart(1);
			}
		}
	});
}




/**
 * 粒度：分钟
 */
showChartMinutes = function() {
	if (result.length <= 0 || result == null) {
		layer.alert('没有相关数据！');
		return;
	}
	var colors = Highcharts.getOptions().colors;
	Highcharts.setOptions({
        global: {
            useUTC: false
        }
    });
	
	var sdata = [];
	var ydata = [];
	
	var xdata = [];
	var indata = [];
	var outdata = [];
	
	var etdata = [];
	var ettemp = {};
	
	var leged = false;
	
	var hjarr = new Array();
	hjarr['obj0'] = '合计';
	
	var table = '<table  style="border:1px solid #c4cdd8; " class="table table-bordered table-hover ">';
	
	$.each(result, function(i, mess){
		leged = true;
		indata.push({x:mess.kpitime, y:Number(mess.incounts)}); //进入车辆数
		outdata.push({x:mess.kpitime, y:Number(mess.outcounts)}); //出去车辆数
	});
	
	
	var incountSum = 0;
	var outcountSum = 0;
	$.each(result, function(i, mess){
		ettemp = {};
		if(i == 0){ //第一行
			ettemp = {};
			table += '<thead>';
			table += '<tr style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
			table += '	<td rowspan="2" style="font-weight:normal;text-align:center;padding:25px 12px 10px 12px;">时间</td>';
			table += '	<td colspan="2" style="font-weight:normal;text-align:center;">'+mess.timetemp+'</td>';
			table += '</tr>';
			ettemp['obj0'] = '时间';
			ettemp['obj1'] = mess.timetemp;
			etdata.push(ettemp);
			
			ettemp = {};
			table += '<tr style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
			table +='	<td style="font-weight:normal;text-align:center;">进入车辆数</td>';
			table +='	<td style="font-weight:normal;text-align:center;">出去车辆数</td>';
			table += '</tr>';
			table += '</thead>'
			ettemp['obj1'] = '进入车辆数'; 
			ettemp['obj2'] = '出去车辆数';
			etdata.push(ettemp);
		}
		ettemp = {};
		table += '<tr style="text-align:center;">';
		table += '	<td style="text-align:center;">'+mess.shijian+'</td>';
		table += '	<td style="text-align:center;">'+toThousands(mess.incounts)+'</td>';
		table += '	<td style="text-align:center;">'+toThousands(mess.outcounts)+'</td>';
		table += '</tr>';
		incountSum += Number(mess.incounts);
		outcountSum += Number(mess.outcounts);
		
		ettemp['obj0'] = mess.shijian;
		ettemp['obj1'] = toThousands(mess.incounts);
		ettemp['obj2'] = toThousands(mess.outcounts);
		etdata.push(ettemp);
	});
	
	//合计：
//	if(result.length > 0){
//		ettemp = {};
//	    table += '<tr><td style="text-align:center;">合计</td>';
//		table += '<td style="text-align:center;">'+toThousands(incountSum)+'</td>';
//		table += '<td style="text-align:center;">'+toThousands(outcountSum)+'</td>';
//		table += '</tr>';
//		ettemp['obj0'] = '合计';
//		ettemp['obj1'] = toThousands(incountSum);
//		ettemp['obj2'] = toThousands(outcountSum);
//		etdata.push(ettemp);
//	}
	
	table += '</table>';
	var etstr = '{"result":'+JSON.stringify(etdata)+',"count":'+count+'}';	//导出
	
	var chart = new Highcharts.Chart({
        chart: {
		 animation: Highcharts.svg, // don't animate in old IE
        marginRight: 30,
        renderTo: 'chart',
           type: 'spline'
        },
        
        title: {
            text: title
        },
        
        legend: {
            enabled: true
        },
        credits:{  //右下角地址
            text:''  
        },
        xAxis: {
        	min:0,
         	max:24,
         	tickInterval:1,    //步进
            tickPixelInterval: 10,
            labels: {
         			style: {
     				color: '#000000'
     			}
     		}
         },
         yAxis: {
             title: {
                 text: '进出车辆数'
             },
             labels: {
                 format: '{value}',
                 style: {
       				color: '#000000'
       			}
             },
             min:0,
             plotLines: [{
                 value: 0,
                 width: 1,
                 color: '#808080'
             }]
         },
        tooltip: {
       	 backgroundColor: '#999999',   // 背景颜色
  			borderColor: 'ffffff',         // 边框颜色
  			borderRadius: 5,             // 边框圆角
  			useHTML: true,
	        shared: true, //共享提示框
        	formatter: function() {
           	 var shi = (this.x+'').split('.');
         	var er = 0;
     		if(shi.length == 2){
     			er = Number(shi[1]);
     			if(shi[1].length == 1){
     				er = Number(er+'0');
     			}
     		}
     		er = Math.round(er*60/100);
     		if(er == 0){
     			er = er + '0';
     		}else if(er < 10){
     			er = '0'+er;
     		}
 			var temp ='<div style="color:#ffffff">';
				temp += '<div style="padding:0px 0px 8px 10px; font-size:14px;width:100%;">'+areaname+'</div>';
				temp += '<div style="height:20px;background:#666666;border-radius: 10px;line-height:20px;margin:0px 0px 5px 0px;">';
					temp += '	<div style="width:60%;float:left;height:8px;margin:0px 8px 8px 8px;">';
					temp += '		<span style="margin-left:7px;">时间：</span>';
					temp += '		<span style="heigt:8px;font-size:13px;margin-left:5px;">'+shi[0]+':'+er+'</span>';
					temp += '	</div>';
		        	temp += '</div>';
		        for(var i = 0 ;i < this.points.length; i++){
		        	temp += '<div style="height:20px;background:#666666;border-radius: 10px;line-height:20px;margin:0px 0px 5px 0px;">';
					temp += '	<div style="width:60%;float:left;height:8px;margin:0px 8px 8px 8px;">';
					temp += '		<span style="margin-left:7px;">'+(this.points[i].series.name)+'</span>';
					temp += '		<span style="display:inline-block;margin-top:5px;margin-left:10px;line-height:30px;width:10px;height:10px;background:'+this.points[i].series.color+';">&nbsp;</span>';
					temp += '		<span style="heigt:8px;font-size:13px;margin-left:5px;">'+toThousands(this.points[i].y)+'</span>';
					temp += '	</div>';
		        	temp += '</div>';
		        }
				temp += '	</div>';
	        	temp += '</div>';
 	 			return temp;
     		
         	}
        },
        plotOptions: {
       	 series: {
            cursor: 'pointer',  
            marker: {
                enabled: false //false false的时候就不会突出显示点 
            }
        },
            column: {
	       	 	pointPadding: 0.4,
	       	 	borderWidth: 0
            }
        },
        
        exporting:{  
	            enabled:true,  
	            // 文件名  
	            filename: titles,  
	            // 导出文件默认类型  
	            type:'image/png',
	            exporttable:etstr,
	            sourceWidth:(screen.availWidth - 365),
             	url:'kpi/export/TotalOrDayExport.do'
	        }, 
	        series:[{
	        	name:'进入车辆数',
	        	dashStyle : 'solid',
	        	data:indata
	        },{
	        	name:'出去车辆数',
	        	dashStyle : 'ShortDash', //ShortDot
	        	data:outdata
	        }]
    });
	
	document.getElementById("data").innerHTML = table;
}


/**
 * 日、月、季、年、周
 * @param {Object} tempShow
 * @memberOf {TypeName} 
 * @return {TypeName} 
 */
showChart = function(tempShow) { 
	currentPage = tempShow;	//当前页
	var temp = tempShow-1;
	totalPage = Math.ceil((Number(count)-1)/pageSize);//总页数
	
	var colors = Highcharts.getOptions().colors;
	if ((result.length <= 0 || result == null) && (result2.length <= 0 || result2 == null)) {
		layer.alert('没有相关数据！');
		return;
	}
	Highcharts.setOptions({
        global: {
            useUTC: false
        }
    });
	var sdata = [];
	var xdata = [];
	var adata = [];
	
	var ydata = [];
	var ydata2 = [];
	
	var etdata = [];
	var ettemp = {};
	
	var leged = false;
	
	var hjarr = new Array();
	var hshrr = new Array();
	hjarr['obj0'] = '合计';
	
	var categories = [];
	var subcategories = [];
	var flag = 0;
	var table = '<table  style="border:1px solid #c4cdd8; " class="table table-bordered table-hover ">';
	
	var lasttime = '';
	var lasttime2 = '';
	var gsname = '';
	var gsname2 = '';
	var asf=0;
	var dff=0;
	var k = 1;
	var p = 1;
	$.each(result, function(i, mess){
		leged = true;
		if(lasttime == ''){
			lasttime = mess.lasttime;
		}
		gsname = mess.gsname;
		//每循环一个都和所有的比较一遍,并赋给ydate
		$.each(result, function(j, jess){
				if(jess.gsname == gsname){ //找行业相同的
					if(p <= result.length){
						xdata.push(timeId == '1006'?(jess.lasttime.substr(jess.lasttime.length-5)):jess.lasttime);
						ydata.push({y:Number(jess.incounts)}); //取消X轴：x:jess.lasttime,
					}
				}else{
					return;
				}
				p++;
		});
		if(dff == 0){
			if(lasttime == mess.lasttime){
				sdata.push({dashStyle : 'solid',name:gsname+'(进)',data:ydata,color:colors[i%10],sort:(gsname)});
				ydata = []; //push完就赋为空值以免重复
			}else{
				dff = 1;
			}	
		}
		lasttime = mess.lasttime;
	});	
	$.each(result2, function(i, mess){
		leged = true;
		if(lasttime2 == ''){
			lasttime2 = mess.lasttime2;
		}
		gsname2 = mess.gsname2;	
		//每循环一个都和所有的比较一遍,并赋给ydate2
		$.each(result2, function(j, jess){
			if(jess.gsname2 == gsname2){ //找行业相同的
				if(k <= result2.length){
					ydata2.push({y:Number(jess.outcounts)});  //取消X轴：x:jess.lasttime2,
				}
			}else{
				return;
			}
			k++;
		});
		if(asf == 0){
			if(lasttime2 == mess.lasttime2){
				sdata.push({dashStyle : 'dash',name:mess.gsname2+'(出)',yAxis:1,data:ydata2,color:colors[i%10],sort:(gsname2)});
				ydata2 = []; //push完就赋为空值以免重复
			}else{
				asf = 1;
			}	
		}
		lasttime2 = mess.lasttime2;
	});
	
	sdata.sort(function(a,b){
		return  a.sort.localeCompare(b.sort) ;
	});
	
	var sum = [];
	var sums = new Array();
	var sign = ",";
	var j = 0;
	var fArray = "";
	
	var sumTemp = [];
	var jj = 0;
	var sumss = new Array();
	var fArrays = "";
	$.each(tabledata2, function(i,mess){	//出去
		if(i > 0){
			for(var i = 0;i < count2;i++){
				if(i == 0){
					(mess['obj'+i] == null?0:mess['obj'+i]);
				}else if(i<=pageSize+(temp*pageSize) && i>0+(temp*pageSize)){
					fArray += Number((mess['obj'+i] == null?0:mess['obj'+i]))+",";
				}
				if(i > 0){
					hshrr['obj'+i] = Number(mess['obj'+i] == null?0:mess['obj'+i])+Number(hshrr['obj'+i] == null?0:hshrr['obj'+i]);
				}
			}
			
			//导出专用：
			for(var i = 0;i < count2;i++){
				if(i > 0){
					fArrays += Number((mess['obj'+i] == null?0:mess['obj'+i]))+",";
				}
			}
		}
	});
	
	//进入
	$.each(tabledata, function(i, mess){
		ettemp = {};
		if(i > 0){
			table += '<tr>';
			for(var i = 0;i < count;i++){
				if(i == 0){
					table += '<td style="text-align:center;">'+(mess['obj'+i] == null?0:mess['obj'+i])+'</td>';
					ettemp['obj0'] = (mess['obj0'] == null?0:mess['obj0']);
				}else if(i<=pageSize+(temp*pageSize) && i>0+(temp*pageSize) ){
					sums = fArray.split(sign);
					for (j; j < sums.length; j++){
						sum = sums[j];
						 j++;
						 if(j < sums.length && (i<=pageSize+(temp*pageSize) && i>0+(temp*pageSize))){
							 break;
						 }
					}
					table += '<td style="text-align:center;">'+toThousands(mess['obj'+i] == null?0:mess['obj'+i])+'</td>';
					table += '<td style="text-align:center;">'+toThousands(sum==null||sum=='NaN'?0:sum)+'</td>';
				}
				if(i > 0){
					//导出专用：
					sumss = fArrays.split(sign);
					for (jj; jj < sumss.length; jj++){
						sumTemp = sumss[jj];
						 jj++;
						 if(jj < sumss.length){
							 break;
						 }
					}
					hjarr['obj'+i] = Number(mess['obj'+i] == null?0:mess['obj'+i])+Number(hjarr['obj'+i] == null?0:hjarr['obj'+i]);
					hshrr['obj'+i];
					ettemp['obj'+(i*2-1)] = toThousands(mess['obj'+i] == null?0:mess['obj'+i]);
					ettemp['obj'+(i*2)] = toThousands(sumTemp==null||sumTemp=='NaN'?0:sumTemp);
				}
				
			}
			table += '</tr>';
			etdata.push(ettemp);
		}else{
			table += '<thead><tr>';
			for(var i = 0;i < count;i++){
				if(i == 0){
					table += '<td rowspan="2" style="font-weight:normal;text-align:center;padding:25px 12px 10px 12px;">'+(mess['obj'+i] == null?0:mess['obj'+i])+'</td>';
				}else if(i<=pageSize+(temp*pageSize) && i>0+(temp*pageSize)){
					table += '<td colspan="2" style="font-weight:normal;text-align:center;">'+(mess['obj'+i] == null?0:mess['obj'+i])+'</td>';
				}
				ettemp['obj'+i] = (mess['obj'+i] == null?0:mess['obj'+i]);
			}
			table +='</tr>';
			etdata.push(ettemp);
			
			ettemp = {};
			table +='<tr>';
			for(var i = 1;i < count;i++){ //第二层
				if(i<=pageSize+(temp*pageSize) && i>0+(temp*pageSize)){
					table +='<td  style="font-weight:normal;text-align:center;">进</td>';
					table +='<td  style="font-weight:normal;text-align:center;">出</td>';
				}
				ettemp['obj'+(i*2-1)] = '进'; 
				ettemp['obj'+(i*2)] = '出';
			}
			table +='</tr>';
			table += '</thead>';
			etdata.push(ettemp);
		}
    });
	
//	if(result.length > 0 || result2.length > 0){
//		ettemp = {};
//	    table += '<tr><td style="text-align:center;">合计</td>';
//		ettemp['obj0'] = '合计';
//		for(var i = 1;i < count;i++){
//			if(i<=pageSize+(temp*pageSize) && i>0+(temp*pageSize)){
//				table += '<td style="text-align:center;">'+toThousands((hjarr['obj'+i] == null?0:hjarr['obj'+i]))+'</td>';
//				table += '<td style="text-align:center;">'+toThousands((hshrr['obj'+i] == null?0:hshrr['obj'+i]))+'</td>';
//			}
//			ettemp['obj'+(i*2-1)] = toThousands(hjarr['obj'+i] == null?0:hjarr['obj'+i]);//游客人数
//			ettemp['obj'+(i*2)] = toThousands(hshrr['obj'+i] == null?0:hshrr['obj'+i]); //进入车辆数
//		}
//		table += '</tr>';
//	    etdata.push(ettemp);
//	}
	table += '</table>';
	
	etstrO.result = etdata;
	etstrO.count = (count+count2-1);
	var etstr = JSON.stringify(etstrO);
if(figureRefresh){ //翻页不需要重复刷新曲线图
	var chart = new Highcharts.Chart({
	    chart: {
			animation: Highcharts.svg, // don't animate in old IE
//		    marginRight: 30, //宽度自适应
		    renderTo: 'chart',
		    type: 'spline' //column 柱 / spline 线 
	    },
	    
	    title: {
	        text: title
	    },
	    
	    legend: {
	    	enabled: leged
	    },
	    
	    credits:{  //右下角地址
	        text:''  
	    },
	    xAxis: {
       	 categories:xdata,
       	 labels: {
    			style: {
    				color: '#000000'
    			}
    		}
	    },
	    yAxis: [{
			    title: {
			        text: '进入车辆数'
			    },
			    labels: {
			        format: '{value}',
			        style: {
							color: '#000000'
						}
			    },
			    min:0,
			    plotLines: [{
			        value: 0,
			        width: 1,
			        color: '#808080'
			    }]
			},{
			    title: {
		        	text: '出去车辆数'
			    },
			    labels: {
			        format: '{value}',
			        style: {
							color: '#000000'
						}
			    },
			    min:0,
			    plotLines: [{
			        value: 0,
			        width: 1,
			        color: '#808080'
			    }],
			    opposite: true
			}
			
	     ], 
	    tooltip: {
	    	backgroundColor: '#999999',   // 背景颜色
	    	borderColor: 'ffffff',         // 边框颜色
			borderRadius: 5,             // 边框圆角
			animation: true,               // 是否启用动画效果
	        useHTML: true,
	        shared: true, //共享提示框
        	formatter: function() {
	    		var sname2 = '';
	    		var nameTemp = '';
	    		var JinOrChu = '';
	    		var finishing = false; //默认没有找到相同
	    		var finishSum = 0;
	    	 	var temp ='<div>';
					temp += '<div style="color:#ffffff; padding:0px 0px 8px 10px; font-size:14px;width:100%;">日期：'+(this.points[0].x)+'&nbsp;&nbsp;&nbsp;&nbsp;</div>';
					for(var i = 0 ;i < this.points.length; i++){
						sname2 = this.points[i].series.name;
						JinOrChu = this.points[i].series.name;
						sname2 = sname2.split("(")[0]; //截取行业类别
						JinOrChu = JinOrChu.substring(JinOrChu.indexOf("(")+1,JinOrChu.indexOf(")")); //截取括号内的进与出
//						console.log(JinOrChu);
						if(nameTemp == ''){ //第一次进来
							nameTemp = sname2;
							if(sname2 == nameTemp){
								temp += '<div style="color:#ffffff; height:20px;background:#666666;border-radius: 10px;line-height:20px;margin:0px 0px 5px 0px;">';
								temp += '	<div style="width:60%;float:left;height:8px;margin:0px 8px 8px 8px;">';
								temp += '		<span style="margin-left:7px;">'+(this.points[i].series.name)+' ：</span>';
								temp += '		<span style="heigt:8px;font-size:13px;margin-left:5px;">'+toThousands(this.points[i].y)+'</span>';
								temp += '		<span style="display:inline-block;margin-top:5px;margin-left:10px;line-height:30px;width:10px;height:10px;background:'+this.points[i].series.color+';">&nbsp;</span>';
							}
						}else{
							if(sname2 == nameTemp){ //找到相同的了
								finishing = true; //true
								temp += '		<span style="margin-left:7px;">'+JinOrChu+'：</span>';
								temp += '		<span style="heigt:8px;font-size:13px;margin-left:5px;">'+toThousands(this.points[i].y)+'</span>';
								temp += '	</div>'; //收尾
		       					temp += '</div>';
								nameTemp = sname2;
							}else{ //不相同， 重新画个div
								finishSum++;
								if(!finishing){ //找到过相同的不用再收尾
									temp += '	</div>'; //收尾
		       						temp += '</div>';
								}
								if(finishSum >= 2){ //达到两次都走的是不相同，需要收尾
									temp += '	</div>'; //收尾
		       						temp += '</div>';
								}
								temp += '<div style="color:#ffffff; height:20px;background:#666666;border-radius: 10px;line-height:20px;margin:0px 0px 5px 0px;">';
								temp += '	<div style="width:60%;float:left;height:8px;margin:0px 8px 8px 8px;">';
								temp += '		<span style="margin-left:7px;">'+(this.points[i].series.name)+' ：</span>';
								temp += '		<span style="heigt:8px;font-size:13px;margin-left:5px;">'+toThousands(this.points[i].y)+'</span>';
								temp += '		<span style="display:inline-block;margin-top:5px;margin-left:10px;line-height:30px;width:10px;height:10px;background:'+this.points[i].series.color+';">&nbsp;</span>';
								nameTemp = sname2;
							}
						}
						
					}
		        temp += '</div>';
	 	 		return temp;
	 		}
	    },
	    plotOptions: {
	   	 series: {
	        cursor: 'pointer',  
	        marker: {
	            enabled: true //false false的时候就不会突出显示点 
	        },
	        lineWidth: 1.5 //线的宽度
	    },
	        column: {
			   	 pointPadding: 0.4,
			     borderWidth: 0
	    		}
	    },
	    
	    exporting:{
	           enabled:true,
	           filename:titles,  
	           type:'image/png',
	           exporttable:etstr,
	           sourceWidth:(screen.availWidth - 365),
	           url:'kpi/export/TotalOrDayExport.do'
	       }, 
	     series: sdata
	});
	}
	document.getElementById("data").innerHTML = table;
	createPageFoot();
}


//生成第页码
function createPageFoot(){
	figureRefresh = false;
	if(totalPage>1){
		var nextpage = currentPage+1;//下一页
		var previouspage = currentPage-1;//上一页
		
		if(currentPage > 4){
			showStar = currentPage-4;//显示分页起始页（初始为1）
		}
		pageStr = "";
		if(previouspage == 0){
			pageStr=pageStr+'<span style="cursor:pointer;"><<</span> ';
		}else{
			pageStr=pageStr+'<span style="cursor:pointer;" onclick="showChart('+previouspage+')"><<</span> ';
		}
		var tempShow = showStar;
		
		for(var showCount=showStar;showCount<=showStar+4;showCount++ ){
			if(tempShow<=totalPage){
				if(tempShow == currentPage){
					pageStr=pageStr+'<span style="cursor:pointer;color:#1f7bbf;" onclick="showChart('+tempShow+')">'+tempShow+'</span> ';
				}else{
					pageStr=pageStr+'<span style="cursor:pointer;" onclick="showChart('+tempShow+')">'+tempShow+'</span> ';
				}
				tempShow = tempShow + 1;
			}
		}
		if(currentPage == totalPage){
			pageStr=pageStr+'<span style="cursor:pointer;">>></span>';
		}else{
			pageStr=pageStr+'<span style="cursor:pointer;" onclick="showChart('+nextpage+')">>></span>';
		}
		
		document.getElementById("bbpage").style.display="block";
		document.getElementById("pageNum").innerHTML = "";
		document.getElementById("pageNum").innerHTML = pageStr;
	}else{
		document.getElementById("bbpage").style.display="block";
		document.getElementById("pageNum").innerHTML = "";
	}
}




function toThousands(num) {
    var result = [ ], counter = 0;
    num = (num || 0).toString().split('');
    for (var i = num.length - 1; i >= 0; i--) {
        counter++;
        result.unshift(num[i]);
        if (!(counter % 3) && i != 0) { result.unshift(','); }
    }
    return result.join('');
}

/**
 * 高速路口 - 单选
areaList = function(){
	var gsnameTemp = gsnameTemps.queryGsname;
	var jtitle="";
	if(null != document.getElementById("areaChoice")){
	var temp = "<table style='text-align:center;' border ='1' ><tr style='font-family: 微软雅黑, 宋体, 黑体;'>";
	var flag = 100;
	$.each(gsnameTemp, function(i, mess){
		if(i != 0 && i % 4 == 0){
			temp += "</tr><tr style='font-family: 微软雅黑, 宋体, 黑体;'>";
		}
		jtitle = mess['gsname']; //要展示的字符串
		if(jtitle.length > 6){
			jtitle = jtitle.substring(0,6)+"..";
		}
		temp += "<td width=100px; style='padding-left: 10px; text-align:center;height:28px;white-space:nowrap;cursor: pointer;' >" +
				" <label onclick=setJxs("+i+") id=jxslist_"+i+" value="+mess['gsname']+" title='"+mess['gsname']+"'>"+(jtitle)+"</label>" +
				"</td>";
		flag ++;
	});
		temp += "</tr></table>";
		document.getElementById("arealist").innerHTML = temp;
	}
}

var tbar='';
setJxs = function(flog){
	if(tbar == '' && tbar != '0'){ //刚进来
		tbar = flog;
	}
	if(null != flog && document.getElementById("jxslist_"+flog)!= null){
		document.getElementById("jxslist_"+flog).style.color="#0066FF"; //选中的改变颜色
		if(flog != tbar){
			document.getElementById("jxslist_"+tbar).style.color="";//没选中的返回默认颜色
			tbar = flog;
		}
		areapm = document.getElementById("jxslist_"+flog).innerHTML;  
	}
}
//areaList();
*/



/**
 * 高速路口 - 多选
 
arrayList = function(){
	var gsnameTemp = gsnameTemps.queryGsname;
	var jtitle="";
	if(null != document.getElementById("MareaChoice")){
	var temp = "<table style='text-align:center;' ><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;cursor: pointer;'  onclick=setGs('jxsAll') id='jxslist_all'>全选</td>";
	var flag = 100;
	$.each(gsnameTemp, function(i, mess){
		if(i != 0 && i % 4 == 0){
			temp += "</tr><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;'></td>";
		}
		jtitle = mess['gsname']; //要展示的字符串
		if(jtitle.length > 5){
			jtitle = jtitle.substring(0,5)+"..";
		}
		temp += "<td width=120px; style='text-align:left;height:28px;white-space:nowrap;cursor: pointer;' onclick=setGs("+i+") id=jxslist_"+i+">" +
				" <input type='checkbox' class='ace ace-checkbox-2' name='jxsItems' id='"+flag+"' value='"+mess['gsname']+"'/>" +
				" <label  class='lbl' for='"+flag+"' title='"+mess['gsname']+"'>"+(jtitle)+"</label>" +
				"</td>";
		flag ++;
	});
		temp += "</tr></table>";
		document.getElementById("Marealist").innerHTML = temp;
	}
}

var tbar = 1; //点击“全选”的计数器
setGs = function(flog){
	if(flog == 'jxsAll'){ //如果选的是“全选”
		document.getElementById("jxslist_all").style.color="#0066FF";
		
		if(tbar == 1){ //点击了第一次
			$("input[name=jxsItems]").each(function() { //全选
		        $(this).prop("checked", true); ////设置所有name为'chk_list'对象的checked为true  (.attr) 
			});
			tbar++;
		}else{
			$("input[name=jxsItems]").each(function() {
		        $(this).prop("checked", false);
			});
			tbar = 1;
		}
	}else{ //否则是复选
		document.getElementById("jxslist_all").style.color="";
	}

	//获取所有name为items的checkbox
	var spCodesTemp = "";
     var temp; //仅供页面控件展示
     var etdata = [];
     
      $('input:checkbox[name=jxsItems]:checked').each(function(i){
       if(0 == i){
    	   spCodesTemp = $(this).val(); //页面
    	   jxsname = "'"+$(this).val()+"'"; //后台
    	   temp = spCodesTemp; //有多个默认显示第一个
       }else{
    	   spCodesTemp += (","+$(this).val());
    	   jxsname += (","+"'"+$(this).val()+"'");
       }
       etdata.push(spCodesTemp);
      });
      
      
      if(etdata.length > 2){ 
    	  temp_areapm = temp+'等';
      }else{
    	  temp_areapm = spCodesTemp;
      }
      etdata = 0;
}
//arrayList();
*/




//======================================================================================================================
//======================================================================================================================
//======================================================================================================================
//======================================================================================================================
//======================================================================================================================
//======================================================================================================================
//======================================================================================================================

/**
 * 行政区划 -------- 单选 
 */
queryXzqh = function(){
	var xzqhTemp = xzqhTemps.queryXzqh;
	var jtitle="";
	if(null != document.getElementById("areaChoice")){
	var temp = "<table style='text-align:center;' border ='1' ><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;' >区域：</td>";
		temp += "<td width=80px; style='text-align:center;cursor: pointer;white-space: nowrap;' onclick=queryGsname(1000,'汇总'); id='jxslist_hz' style='font-size:14px;'>汇总</td>";
	var flag = 100;
	$.each(xzqhTemp, function(i, mess){
		if(i != 0 && i % 4 == 0){
			temp += "</tr><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;'></td>";
		}
		jtitle = mess['xzqh']; //要展示的字符串
		if(jtitle.length > 5){
			jtitle = jtitle.substring(0,5)+"..";
		}
		temp += "<td width=80px; style='text-align:center;height:28px;white-space:nowrap;cursor: pointer;' >" +
				" <label onclick=queryGsname("+i+",'"+mess['xzqh']+"') id=jxslist_"+i+" value="+mess['xzqh']+" title='"+mess['xzqh']+"'>"+(jtitle)+"</label>" +
				"</td>";
		flag ++;
	});
		temp += "</tr></table></br>";
//		console.info(temp);
		document.getElementById("arealist").innerHTML = temp;
	}
}

//获取行政区划相对应的高速路口：
var tbar='';
var xzqhWithGsnameList;
queryGsname = function(flog, name){
	redio_gslkpm = ''; //没点击一次，高速路口都需要清空
	
	//点击汇总
	if(flog == 1000 && name == '汇总'){
		document.getElementById("jxslist_hz").style.color="#0066FF"; //选中的改变颜色
		if(document.getElementById("jxslist_"+tbar) != null && document.getElementById("jxslist_"+tbar) != ''){
			if(flog != tbar){
				document.getElementById("jxslist_"+tbar).style.color="";//没选中的返回默认颜色
//				tbar = flog;
			}
		}
		//清空收费站
		if(document.getElementById("tab"+tabSum) != null && document.getElementById("tab"+tabSum) != '' && document.getElementById("tab"+tabSum) != 'undefined'){
			document.getElementById("tab"+tabSum).innerHTML = '';
		}
		
		redio_xzqhpm = name; //汇总，后台使用
//		console.info(name+' -- '+redio_gslkpm);
	}else{
		document.getElementById("jxslist_hz").style.color=""; //汇总变回白色
		
		if(tbar == '' && tbar != '0'){ //刚进来
			tbar = flog;
		}
		if(null != flog && document.getElementById("jxslist_"+flog)!= null){
			document.getElementById("jxslist_"+flog).style.color="#0066FF"; //选中的改变颜色
			if(flog != tbar){
				document.getElementById("jxslist_"+tbar).style.color="";//没选中的返回默认颜色
				tbar = flog;
			}
			redio_temp_xzqhpm = document.getElementById("jxslist_"+flog).innerHTML;
			redio_xzqhpm = name; //区域名称，后台使用
		}
		
		$.ajax({
			type:"post",
			url:"kpi/jtsjTollgate/queryGsname.do",
			data:{xzqh:name},
			timeout: 10000,
			dataType: "json",
			success:function(data,textStatus) {
				xzqhWithGsnameList = data.gsnameList;
	//			console.info(gsnameList);
				radioGsname();	//单选 - 高速路口
			}
		});
	}
}
var tabSum = 0; //table的id，自动增长
radioGsname = function(){
	//每点击新的一个，前一个table就清空：
//	console.info(document.getElementById("tab"+tabSum));
	if(document.getElementById("tab"+tabSum) != null && document.getElementById("tab"+tabSum) != '' && document.getElementById("tab"+tabSum) != 'undefined'){
		document.getElementById("tab"+tabSum).innerHTML = '';
	}
	
	tabSum++; //table Id自增
	var gsnameTemp = xzqhWithGsnameList.queryGsname;
	var jtitle="";
	if(null != document.getElementById("areaChoice")){
	var temp = "<table id='tab"+tabSum+"' style='text-align:center;' ><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=60px; style='text-align:left;' >收费站：</td>";
	var flag = 100;
	$.each(gsnameTemp, function(i, mess){
		if(i != 0 && i % 4 == 0){
			temp += "</tr><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;'></td>";
		}
		jtitle = mess['gsname']; //要展示的字符串
		if(jtitle.length > 6){
			jtitle = jtitle.substring(0,6)+"..";
		}
		temp += "<td width=100px; style='padding-left: 0px; text-align:left;height:28px;white-space:nowrap;cursor: pointer;' >" +
				" <label onclick=setRadioGsname("+i+",'"+mess['gsname']+"') id=redioGs_"+i+" value="+mess['gsname']+" title='"+mess['gsname']+"'>"+(jtitle)+"</label>" +
				"</td>";
		flag ++;
	});
		temp += "</tr></table>";
		document.getElementById("arealist").innerHTML += temp;
	}
}

var readioSum='';
setRadioGsname = function(flog, name){
	if(readioSum == '' && readioSum != '0'){ //刚进来
		readioSum = flog;
	}
	if(null != flog && document.getElementById("redioGs_"+flog)!= null){
		document.getElementById("redioGs_"+flog).style.color="#0066FF"; //选中的改变颜色
		if(flog != readioSum){
			document.getElementById("redioGs_"+readioSum).style.color="";//没选中的返回默认颜色
			readioSum = flog;
		}
		redio_temp_gslkpm = document.getElementById("redioGs_"+flog).innerHTML;  
		redio_gslkpm = name; //高速路口名称，后台使用
	}
}





//------------------------------------------------------------多选----------------------------------------------------
querySelectXzqh = function(){
	var xzqhTemp = xzqhTemps.queryXzqh;
	var jtitle="";
	if(null != document.getElementById("areaChoice")){
	var temp = "<table style='text-align:center;' border ='1' ><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;' >区域：</td>";
	temp += "<td width=80px; style='text-align:center;cursor: pointer;white-space: nowrap;' onclick=querySelectGsname(1000,'汇总'); id='rediolist_hz' style='font-size:14px;'>汇总</td>";
	
	var flag = 100;
	$.each(xzqhTemp, function(i, mess){
		if(i != 0 && i % 4 == 0){
			temp += "</tr><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;'></td>";
		}
		jtitle = mess['xzqh']; //要展示的字符串
		if(jtitle.length > 5){
			jtitle = jtitle.substring(0,5)+"..";
		}
		temp += "<td width=80px; style='text-align:center;height:28px;white-space:nowrap;cursor: pointer;' >" +
				" <label onclick=querySelectGsname("+i+",'"+mess['xzqh']+"') id=rediolist_"+i+" value="+mess['xzqh']+" title='"+mess['xzqh']+"'>"+(jtitle)+"</label>" +
				"</td>";
		flag ++;
	});
		temp += "</tr></table></br>";
		document.getElementById("Marealist").innerHTML = temp;
	}
}

//获取行政区划相对应的高速路口：
var rtbar='';
var xzqhWithSelectGsnameList;
querySelectGsname = function(flog, name){
	select_gslkpm = ''; //没点击一次，高速路口都需要清空
	
	//点击汇总
	if(flog == 1000 && name == '汇总'){
		document.getElementById("rediolist_hz").style.color="#0066FF"; //选中的改变颜色
		if(document.getElementById("rediolist_"+rtbar) != null && document.getElementById("rediolist_"+rtbar) != ''){
			if(flog != rtbar){
				document.getElementById("rediolist_"+rtbar).style.color="";//没选中的返回默认颜色
			}
		}
		//清空收费站
		if(document.getElementById("stab"+stabSum) != null && document.getElementById("stab"+stabSum) != '' && document.getElementById("stab"+stabSum) != 'undefined'){
			document.getElementById("stab"+stabSum).innerHTML = '';
		}
		select_xzqhpm = name; //汇总，后台使用
	}else{
		document.getElementById("rediolist_hz").style.color=""; //汇总变回白色
		
		if(rtbar == '' && rtbar != '0'){ //刚进来
			rtbar = flog;
		}
		if(null != flog && document.getElementById("rediolist_"+flog)!= null){
			document.getElementById("rediolist_"+flog).style.color="#0066FF"; //选中的改变颜色
			if(flog != rtbar){
				document.getElementById("rediolist_"+rtbar).style.color="";//没选中的返回默认颜色
				rtbar = flog;
			}
			select_temp_xzqhpm = document.getElementById("rediolist_"+flog).innerHTML;
			select_xzqhpm = name; //区域名称，后台使用
		}
		
		$.ajax({
			type:"post",
			url:"kpi/jtsjTollgate/queryGsname.do",
			data:{xzqh:name},
			timeout: 10000,
			dataType: "json",
			success:function(data,textStatus) {
				xzqhWithSelectGsnameList = data.gsnameList;
				selectGsname();//多选 - 高速路口
			}
		});
	}
}
var stabSum = 0; //table的id，自动增长
selectGsname = function(){
	if(document.getElementById("stab"+stabSum) != null && document.getElementById("stab"+stabSum) != '' && document.getElementById("stab"+stabSum) != 'undefined'){
		document.getElementById("stab"+stabSum).innerHTML = '';
	}
	stabSum++; //table Id自增
	
	var gsnameTemp = xzqhWithSelectGsnameList.queryGsname;
	var jtitle="";
	if(null != document.getElementById("MareaChoice")){
	var temp = "<table id='stab"+stabSum+"' style='text-align:center;' ><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;cursor: pointer;'  onclick=setSelectGsname('selectAll') id='selectList_all'>全选</td>";
	var flag = 100;
	$.each(gsnameTemp, function(i, mess){
		if(i != 0 && i % 4 == 0){
			temp += "</tr><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;'></td>";
		}
		jtitle = mess['gsname']; //要展示的字符串
		if(jtitle.length > 5){
			jtitle = jtitle.substring(0,5)+"..";
		}
		temp += "<td width=120px; style='text-align:left;height:28px;white-space:nowrap;cursor: pointer;' onclick=setSelectGsname("+i+") id=selectList_"+i+">" +
				" <input type='checkbox' class='ace ace-checkbox-2' name='selectItems' id='"+flag+"' value='"+mess['gsname']+"'/>" +
				" <label  class='lbl' for='"+flag+"' title='"+mess['gsname']+"'>"+(jtitle)+"</label>" +
				"</td>";
		flag ++;
	});
		temp += "</tr></table>";
		document.getElementById("Marealist").innerHTML += temp;
	}
}

var stbar = 1; //点击“全选”的计数器
setSelectGsname = function(flog){
	if(flog == 'selectAll'){ //如果选的是“全选”
		document.getElementById("selectList_all").style.color="#0066FF";
		if(stbar == 1){ //点击了第一次
			$("input[name=selectItems]").each(function() { //全选
		        $(this).prop("checked", true); ////设置所有name为'chk_list'对象的checked为true  (.attr) 
			});
			stbar++;
		}else{
			$("input[name=selectItems]").each(function() {
		        $(this).prop("checked", false);
			});
			stbar = 1;
		}
	}else{ //否则是复选
		document.getElementById("selectList_all").style.color="";
	}

	//获取所有name为items的checkbox
	var spCodesTemp = "";
     var temp; //仅供页面控件展示
     var etdata = [];
     
      $('input:checkbox[name=selectItems]:checked').each(function(i){
       if(0 == i){
    	   spCodesTemp = $(this).val(); //页面
    	   jxsname = "'"+$(this).val()+"'"; //后台
    	   temp = spCodesTemp; //有多个默认显示第一个
       }else{
    	   spCodesTemp += (","+$(this).val());
    	   jxsname += (","+"'"+$(this).val()+"'");
       }
       etdata.push(spCodesTemp);
      });
      
      
      if(etdata.length > 2){ 
    	  select_gslkpm = temp+'等';
      }else{
    	  select_gslkpm = spCodesTemp;
      }
      etdata = 0;
}

queryXzqh(); //单选
querySelectXzqh(); //多选

