var clientWidth = window.screen.width;
var jxsname; //地区名称
var st; //开始时间
var et; //结束时间
var sjidu; //开始季度
var title; //标题 
var counts; //数量
var resultdata;//主景点后台查询后的结果数据集
var tabledatas = '';

jQuery(function($) {
if(defaultList != null && defaultList != ""){
	
	resultdata = defaultList;
	st = startTime;
	et = endTime;
	//控制分辨率
	if(clientWidth > 1800){
		title = '<span style="font-size: 24px;font-weight:bold;">'+st+'至'+et+'商户刷卡分析(日)</span>';
		titles = st+'至'+et+'商户刷卡分析(日)';
	}else{
		title = '<b>'+st+'至'+et+'商户刷卡分析(日)</b>';
		titles = st+'至'+et+'商户刷卡分析(日)';
	}
	counts = resultdata.count; //数量
	tabledatas = resultdata.tabledata;
	
	showChart();
}
});

var jiduTemp;
var jiduEndTemp;
getData = function(){
	st = startTime;
	et = endTime;

	if(startTime2 == '01'){
		jiduTemp = '第一季度';
	}else if(startTime2 == '04'){
		jiduTemp = '第二季度';
	}else if(startTime2 == '07'){
		jiduTemp = '第三季度';
	}else if(startTime2 == '10'){
		jiduTemp = '第四季度';
	}
	
	//必须分开写：
	if(endTime2 == '01'){
		jiduEndTemp = '第一季度';
	}else if(endTime2 == '04'){
		jiduEndTemp = '第二季度';
	}else if(endTime2 == '07'){
		jiduEndTemp = '第三季度';
	}else if(endTime2 == '10'){
		jiduEndTemp = '第四季度';
	}
	
	if(clientWidth > 1800){
		if(kpiId == '1005'){ //分
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'商户刷卡分析(分)</span>';
			titles = st+'商户刷卡分析(分)';
		}else if(kpiId == '1006'){ //日
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'至'+et+'商户刷卡分析(日)</span>';
			titles = st+'至'+et+'商户刷卡分析(日)';
		}else if(kpiId == '1007'){ //月
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'月至'+et+'月商户刷卡分析(月)</span>';
			titles = st+'月至'+et+'月商户刷卡分析(月)';
		}else if(kpiId == '1008'){ //季
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'年【'+jiduTemp+'】至【'+jiduEndTemp+'】商户刷卡分析(季)</span>';
			titles = st+'年【'+jiduTemp+'】至【'+jiduEndTemp+'】商户刷卡分析(季)';
		}else if(kpiId == '1009'){ //年
			title = '<span style="font-size: 24px;font-weight:bold;">'+st+'年至'+et+'年商户刷卡分析(年)</span>';
			titles = st+'年至'+et+'年商户刷卡分析(年)';
		}
	}else{
		if(kpiId == '1005'){ //分
			title = '<b>'+st+'商户刷卡分析(分)</b>';
			titles = st+'商户刷卡分析(分)';
		}else if(kpiId == '1006'){ //日
			title = '<b>'+st+'至'+et+'商户刷卡分析(日)</b>';
			titles = st+'至'+et+'商户刷卡分析(日)';
		}else if(kpiId == '1007'){ //月
			title = '<b>'+st+'月至'+et+'月商户刷卡分析(月)</b>';
			titles = st+'月至'+et+'月商户刷卡分析(月)';
		}else if(kpiId == '1008'){ //季
			title = '<b>'+st+'年【'+jiduTemp+'】至【'+jiduEndTemp+'】商户刷卡分析(季)</b>';
			titles = st+'年【'+jiduTemp+'】至【'+jiduEndTemp+'】商户刷卡分析(季)';
		}else if(kpiId == '1009'){ //年
			title = '<b>'+st+'年至'+et+'年商户刷卡分析(年)</b>';
			titles = st+'年至'+et+'年商户刷卡分析(年)';
		}
	}
	
	
	if(jxsname == '' || jxsname == null || jxsname == 'undefined'){
		jxsname = '汇总'; //默认查询汇总
	}
	//	alert(jxsname+' -- '+st+' -- '+et+' -- '+startTime2+' -- '+endTime2+' -- '+kpiId);
	
	var url = 'ylzh/ylzhCityday/queryYlzhCityDayList.do';
	var postData = {"city":jxsname,"timeStart":st,"timeEnd":et,"sjidu":startTime2,"ejidu":endTime2,"kpiId":kpiId};
	$.post(url,postData,function(data){
//		$.each(data, function(i, mess){
//			console.info(i+' -- '+mess);
//		});
		if(data != null){
			resultdata = data.scenis;
			counts = resultdata.count; //数量
			tabledatas = resultdata.tabledata;
			showChart();
		}
	});
}


showChart = function() { 
	var colors = Highcharts.getOptions().colors;
	Highcharts.setOptions({
        global: {
            useUTC: false
        }
    });
	if (counts <= 1 || counts == '' || counts == 'undefined') {
		layer.alert('没有相关地区的数据！');
		return;
	}
	var ssdata = [];
	var xdata = [];
	var ydata = [];
	var leged = false;
	
	var lasttime = '';
	var names = '';
	var asf=0;
	var dff=0;
	var k = 1;
	var p = 1;
	
	var jyje = 0;
	var jybs = 0;
	var jydj = 0;
	
	var sdata = [];
	var ettemp = {};
	var table = '<table  style="border:1px solid #c4cdd8; " class="table table-bordered table-hover ">';
	
	if(kpiId == '1006'){
		ettemp['obj0'] = '时间';
		ettemp['obj1'] = '区域';
		ettemp['obj2'] = '交易金额';
		ettemp['obj3'] = '交易笔数';
		ettemp['obj4'] = '次单价';
		ettemp['obj5'] = '次单价本月平均';
		ettemp['obj6'] = '交易金额本月累计';
		ettemp['obj7'] = '交易笔数本月累计';
		ettemp['obj8'] = '消费次数占比-上午';
		ettemp['obj9'] = '消费次数占比-午间';
		ettemp['obj10'] = '消费次数占比-下午';
		ettemp['obj11'] = '消费次数占比-晚间';
		ettemp['obj12'] = '消费次数占比-深夜';
		sdata.push(ettemp);
		
		table += '<thead>';
		table += '<tr style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
		table += '	<td rowspan="2" style="text-align:center; padding-top:25px;">时间</td>';
		table += '	<td rowspan="2" style="text-align:center; padding-top:25px;">区域</td>';
		table += '	<td rowspan="2" style="text-align:center; padding-top:25px;">交易金额</td>';
		table += '	<td rowspan="2" style="text-align:center; padding-top:25px;">交易笔数</td>';
		table += '	<td rowspan="2" style="text-align:center; padding-top:25px;">次单价</td>';
		table += '	<td rowspan="2" style="text-align:center; padding-top:25px;">次单价本月平均</td>';
		table += '	<td rowspan="2" style="text-align:center; padding-top:25px;">交易金额本月累计</td>';
		table += '	<td rowspan="2" style="text-align:center; padding-top:25px;">交易笔数本月累计</td>';
		table += '	<td colspan="5" style="text-align:center;">消费次数占比</td>';
		table += '</tr>';
		
		table += '<tr style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
		
		table += '	<td style="text-align:center;">上午</td>'
		table += '	<td style="text-align:center;">午间</td>'
		table += '	<td style="text-align:center;">下午</td>'
		table += '	<td style="text-align:center;">晚间</td>'
		table += '	<td style="text-align:center;">深夜</td>'
		table += '</tr>';
		table += '</thead>';
		
	}else{
		ettemp['obj0'] = '时间';
		ettemp['obj1'] = '区域';
		ettemp['obj2'] = '消费金额';
		ettemp['obj3'] = '消费人数';
		ettemp['obj4'] = '消费金额同比';
		ettemp['obj5'] = '消费金额环比';
		ettemp['obj6'] = '消费人数同比';
		ettemp['obj7'] = '消费人数环比';
		ettemp['obj8'] = '次单价同比';
		ettemp['obj9'] = '次单价环比';
		sdata.push(ettemp);
		
		table += '<thead><tr style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
		table += '<td style="text-align:center;">时间</td>';
		table += '<td style="text-align:center;">区域</td>';
		table += '<td style="text-align:center;">消费金额</td>';
		table += '<td style="text-align:center;">消费人数</td>';
		table += '<td style="text-align:center;">消费金额同比</td>';
		table += '<td style="text-align:center;">消费金额环比</td>';
		table += '<td style="text-align:center;">消费人数同比</td>';
		table += '<td style="text-align:center;">消费人数环比</td>';
		table += '<td style="text-align:center;">次单价同比</td>';
		table += '<td style="text-align:center;">次单价环比</td>';
		table += '</tr></thead>';
	}
	
	
	$.each(tabledatas, function(i, mess){
		leged = true;
		if(lasttime == ''){
			lasttime = mess.lasttime;
		}
		names = mess.city;
		//每循环一个都和所有的比较一遍,并赋给ydate
		$.each(tabledatas, function(j, jess){
				if(jess.city == names){ //找行业相同的
					if(p <= tabledatas.length){
						xdata.push(jess.lasttime);
						ydata.push({y:Number(jess.transAmount)}); //取消X轴：x:jess.lasttime,
					}
				}else{
					return;
				}
				p++;
		});
		if(dff == 0){
			if(lasttime == mess.lasttime){
				ssdata.push({dashStyle : 'solid',name:names,data:ydata,color:colors[i%10]});
				ydata = []; //push完就赋为空值以免重复
			}else{
				dff = 1;
			}	
		}
		lasttime = mess.lasttime;
	});	
	
	$.each(tabledatas, function(i, mess){
		if(kpiId == '1006'){
			ettemp = {};
			table += '<tr style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
			table += '<td style="text-align:center;">'+(mess['lasttime'] == null?0:mess['lasttime'])+'</td>';	
			table += '<td style="text-align:center;">'+(mess['city'] == null?0:mess['city'])+'</td>';
			table += '<td style="text-align:center;">'+(mess['transAmount'] == null?0:mess['transAmount'])+'</td>';
			table += '<td style="text-align:center;">'+(mess['transCount'] == null?0:mess['transCount'])+'</td>';
			table += '	<td style="text-align:center;">'+(mess['singleAmount'] == null?0:mess['singleAmount'])+'</td>';
			table += '	<td style="text-align:center;">'+(mess['singlemonthAvg'] == null?0:mess['singlemonthAvg'])+'</td>';
			table += '	<td style="text-align:center;">'+(mess['cummonthAmount'] == null?0:mess['cummonthAmount'])+'</td>';
			table += '	<td style="text-align:center;">'+(mess['cummonthCount'] == null?0:mess['cummonthCount'])+'</td>';
			table += '<td style="text-align:center;">'+(mess['amPercentage'] == null?0:mess['amPercentage'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['noonPercentage'] == null?0:mess['noonPercentage'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['pmPercentage'] == null?0:mess['pmPercentage'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['evenPercentage'] == null?0:mess['evenPercentage'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['latePercentage'] == null?0:mess['latePercentage'])+'%</td>';
			table += '</tr>';
	
			jyje += Number((mess['transAmount'] == null?0:mess['transAmount']));
			jybs += Number((mess['transCount'] == null?0:mess['transCount']));
			ettemp['obj0'] = (mess['lasttime'] == null?0:mess['lasttime'])+'';	
			ettemp['obj1'] = (mess['city'] == null?0:mess['city']);
			ettemp['obj2'] = (mess['transAmount'] == null?0:mess['transAmount']);
			ettemp['obj3'] = (mess['transCount'] == null?0:mess['transCount']);
			ettemp['obj4'] = (mess['singleAmount'] == null?0:mess['singleAmount']);
			ettemp['obj5'] = (mess['singlemonthAvg'] == null?0:mess['singlemonthAvg']);
			ettemp['obj6'] = (mess['cummonthAmount'] == null?0:mess['cummonthAmount']);
			ettemp['obj7'] = (mess['cummonthCount'] == null?0:mess['cummonthCount']);
			ettemp['obj8'] = (mess['amPercentage'] == null?0:mess['amPercentage'])+'%';
			ettemp['obj9'] = (mess['noonPercentage'] == null?0:mess['noonPercentage'])+'%';
			ettemp['obj10'] = (mess['pmPercentage'] == null?0:mess['pmPercentage'])+'%';
			ettemp['obj11'] = (mess['evenPercentage'] == null?0:mess['evenPercentage'])+'%';
			ettemp['obj12'] = (mess['latePercentage'] == null?0:mess['latePercentage'])+'%';
			sdata.push(ettemp);
		}else{
			ettemp = {};
			table += '<tr style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
	//		if(kpiId == '1006'){
				table += '<td style="text-align:center;">'+(mess['lasttime'] == null?0:mess['lasttime'])+'</td>';	
	//		}else if(kpiId == '1008'){ //季
	//			table += '<td style="text-align:center;">'+st+'-'+startTime2+'~'+st+'-'+Tajidu+'</td>';	
	//		}else{
	//			table += '<td style="text-align:center;">'+st+'~'+et+'</td>';
	//		}
			
			table += '<td style="text-align:center;">'+(mess['city'] == null?0:mess['city'])+'</td>';
			table += '<td style="text-align:center;">'+(mess['transAmount'] == null?0:mess['transAmount'])+'</td>';
			table += '<td style="text-align:center;">'+(mess['transCount'] == null?0:mess['transCount'])+'</td>';
			table += '<td style="text-align:center;">'+(mess['singleAmount'] == null?0:mess['singleAmount'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['amPercentage'] == null?0:mess['amPercentage'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['noonPercentage'] == null?0:mess['noonPercentage'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['pmPercentage'] == null?0:mess['pmPercentage'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['evenPercentage'] == null?0:mess['evenPercentage'])+'%</td>';
			table += '<td style="text-align:center;">'+(mess['latePercentage'] == null?0:mess['latePercentage'])+'%</td>';
			table += '</tr>';
	
			jyje += Number((mess['transAmount'] == null?0:mess['transAmount']));
			jybs += Number((mess['transCount'] == null?0:mess['transCount']));
	//		if(kpiId == '1006'){
				ettemp['obj0'] = (mess['lasttime'] == null?0:mess['lasttime'])+'';	
	//		}else if(kpiId == '1008'){ //季
	//			ettemp['obj0'] = st+'-'+startTime2+'~'+st+'-'+Tajidu;	
	//		}else{
	//			ettemp['obj0'] = st+'~'+et;
	//		}
			ettemp['obj1'] = (mess['city'] == null?0:mess['city']);
			ettemp['obj2'] = (mess['transAmount'] == null?0:mess['transAmount']);
			ettemp['obj3'] = (mess['transCount'] == null?0:mess['transCount']);
			ettemp['obj4'] = (mess['singleAmount'] == null?0:mess['singleAmount'])+'%';
			ettemp['obj5'] = (mess['amPercentage'] == null?0:mess['amPercentage'])+'%';
			ettemp['obj6'] = (mess['noonPercentage'] == null?0:mess['noonPercentage'])+'%';
			ettemp['obj7'] = (mess['pmPercentage'] == null?0:mess['pmPercentage'])+'%';
			ettemp['obj8'] = (mess['evenPercentage'] == null?0:mess['evenPercentage'])+'%';
			ettemp['obj9'] = (mess['latePercentage'] == null?0:mess['latePercentage'])+'%';
			sdata.push(ettemp);		
		}
	});
	
	if(kpiId == '1006'){
		if(tabledatas.length > 0){
			ettemp = {};
			ettemp['obj0'] = '合计';
			ettemp['obj1'] = '-';
			ettemp['obj2'] = toDecimal(jyje);
			ettemp['obj3'] = (jybs);
			ettemp['obj4'] = '-';
			ettemp['obj5'] = '-';
			ettemp['obj6'] = '-';
			ettemp['obj7'] = '-';
			ettemp['obj8'] = '-';
			ettemp['obj9'] = '-';
			ettemp['obj10'] = '-';
			ettemp['obj11'] = '-';
			ettemp['obj12'] = '-';
			
		    table += '<tr  style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
		    table += '	<td colspan="2" style="text-align:center;">合计</td>';
		    table += '	<td style="text-align:center;">'+toDecimal(jyje)+'</td>';
		    table += '	<td style="text-align:center;">'+(jybs)+'</td>';
		    table += '	<td colspan="9" style="text-align:center;"></td>';
			table += '</tr>';
			
		    sdata.push(ettemp);
		}
	}else{
		if(tabledatas.length > 0){
			ettemp = {};
			ettemp['obj0'] = '合计';
			ettemp['obj1'] = '-';
			ettemp['obj2'] = toDecimal(jyje);
			ettemp['obj3'] = (jybs);
			ettemp['obj5'] = '-';
			ettemp['obj6'] = '-';
			ettemp['obj7'] = '-';
			ettemp['obj8'] = '-';
			ettemp['obj9'] = '-';
			
		    table += '<tr  style="font-size: 16px; font-family: 微软雅黑, 宋体, 黑体;">';
		    table += '	<td colspan="2" style="text-align:center;">合计</td>';
		    table += '	<td style="text-align:center;">'+toDecimal(jyje)+'</td>';
		    table += '	<td style="text-align:center;">'+(jybs)+'</td>';
		    table += '	<td colspan="6" style="text-align:center;"></td>';
			table += '</tr>';
			
		    sdata.push(ettemp);
		}
	}
	
	table += '</table>';
	
	if(kpiId == '1006'){
		var etstr = '{"result":'+JSON.stringify(sdata)+',"count":'+13+'}';	//导出
	}else{
		var etstr = '{"result":'+JSON.stringify(sdata)+',"count":'+10+'}';	//导出
	}
	var chart = new Highcharts.Chart({
		    chart: {
				animation: Highcharts.svg, // don't animate in old IE
			    marginRight: 30, //宽度自适应
			    renderTo: 'chart',
			    type: 'bar' //column 柱 / spline 线 
		    },
		    
		    title: {
		        text: title
		    },
		    
		    legend: {
		    	enabled: leged
		    },
		    
		    credits:{  //右下角地址
		        text:''  
		    },
		    xAxis: {
	       	 categories:xdata,
	       	 labels: {
	    			style: {
	    				color: '#000000'
	    			}
	    		}
		    },
		    yAxis: {
				    title: {
				        text: ''
				    },
				    labels: {
				        format: '{value}',
				        style: {
								color: '#000000'
							}
				    },
				    min:0,
				    plotLines: [{
				        value: 0,
				        width: 1,
				        color: '#808080'
				    }]
				}, 
		    tooltip: {
		    	backgroundColor: '#999999',   // 背景颜色
		    	borderColor: 'ffffff',         // 边框颜色
				borderRadius: 5,             // 边框圆角
				animation: true,               // 是否启用动画效果
		        useHTML: true,
		        shared: true, //共享提示框
		   	 	formatter: function() {
					var temp ='<div style="color:#ffffff">';
					temp += '<div style="padding:0px 0px 8px 10px; font-size:14px;width:100%;">'+(this.points[0].x)+'&nbsp;&nbsp;&nbsp;&nbsp;交易金额</div>';
					
			        for(var i = 0 ;i < this.points.length; i++){
			        	temp += '<div style="height:20px;background:#666666;border-radius: 10px;line-height:20px;margin:0px 0px 5px 0px;">';
						temp += '	<div style="width:60%;float:left;height:8px;margin:0px 8px 8px 8px;">';
						temp += '		<span style="margin-left:7px;">'+(this.points[i].series.name)+'</span>';
						temp += '		<span style="display:inline-block;margin-top:5px;margin-left:10px;line-height:30px;width:10px;height:10px;background:'+this.points[i].series.color+';">&nbsp;</span>';
						temp += '		<span style="heigt:8px;font-size:13px;margin-left:5px;">'+(this.points[i].y)+'</span>';
						temp += '	</div>';
			        	temp += '</div>';
			        }
					temp += '	</div>';
		        	temp += '</div>';
	 	 			return temp;
	     		}
		    },
		    plotOptions: {
			   	 series: {
					stacking: 'normal',
		             marker: {
		                 enabled: false //false false的时候就不会突出显示点 
		             }
			    },
	         	column: {
	         		pointPadding: 0.4,
	//       		pointWidth: 5,
	         		borderWidth: 0,
	         		dataLabels: {
	         		enabled: true,
	         		color: '#000000',
	         		
	         		style: {
	         		fontSize: '10px',
	         		fontFamily: 'Verdana, sans-serif',
	         		textShadow: '0 0 3px black'
	         		}
	         	}
	         	}
	        },
		    
		    exporting:{
		           enabled:true,
		           filename:titles,  
		           type:'image/png',
		           exporttable:etstr,
		           sourceWidth:(screen.availWidth - 365),
		           url:'kpi/export/export.do'
		       }, 
		     series: ssdata
		});
	
	document.getElementById("data").innerHTML = table;
}






/**
 * 选择地区
 */
areaList = function(){
	var jtitle="";
	if(null != document.getElementById("areaChoice")){
	var temp = "<table style='text-align:center;'><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=50px; style='text-align:left;cursor: pointer;'  onclick=setJxs('jxsAll') id='jxslist_all'>全选</td>";
	var flag = 100;
	
    temp += "<td width=100px; style='text-align:left;height:28px;white-space:nowrap;cursor: pointer;' onclick=setJxs('summary') id='jxslist_summary'>汇总</td>";
	$.each(hy, function(i, mess){ 
		if(i != 0 && i % 3 == 0){
			temp += "</tr><tr style='font-family: 微软雅黑, 宋体, 黑体;'><td width=70px; style='text-align:left;'></td>";
		}
		jtitle = mess['city']; //要展示的字符串
		if(jtitle.length > 5){
			jtitle = jtitle.substring(0,5)+"..";
		}
		temp += "<td width=100px; style='text-align:left;height:28px;white-space:nowrap;cursor: pointer;' onclick=setJxs("+i+") id=jxslist_"+i+">" +
				" <input type='checkbox' class='ace ace-checkbox-2' name='jxsItems' id='"+flag+"' value='"+mess['city']+"'/>" +
				" <label class='lbl' for='"+flag+"' title='"+mess['city']+"'>"+(jtitle)+"</label>" +
				"</td>";
		flag ++;
	});
		temp += "</tr></table>";
		document.getElementById("arealist").innerHTML = temp;
	}
}


var tbar = 1; //点击“全选”的计数器
setJxs = function(flog){
	if(flog == 'jxsAll'){ //如果选的是“全选”
		document.getElementById("jxslist_all").style.color="#0066FF";
		document.getElementById("jxslist_summary").style.color="";//汇总不变色
		
		if(tbar == 1){ //点击了第一次
			$("input[name=jxsItems]").each(function() { //全选
		        $(this).prop("checked", true); ////设置所有name为'chk_list'对象的checked为true  (.attr) 
			});
			tbar++;
		}else{
			$("input[name=jxsItems]").each(function() {
		        $(this).prop("checked", false);
			});
			tbar = 1;
		}
	}else if(flog == 'summary'){ //汇总
		document.getElementById("jxslist_summary").style.color="#0066FF"; //自己变颜色
		document.getElementById("jxslist_all").style.color="";//全选不变色
		//清空所选的记录：
		$("input[name=jxsItems]").each(function() {
		        $(this).prop("checked", false);
		});
		tbar = 1;
		
	}else{ //否则是复选
		document.getElementById("jxslist_all").style.color="";
		document.getElementById("jxslist_summary").style.color="";//汇总不变色
	}

	//获取所有name为items的checkbox
     var spCodesTemp = "";
     var temp; //仅供页面控件展示
     var etdata = [];
     
     if(flog == 'summary'){ //汇总
    	 jxsname = "'汇总'";
    	 temp_areapm = '汇总';
     }else{
	      $('input:checkbox[name=jxsItems]:checked').each(function(i){
	       if(0 == i){
	    	   spCodesTemp = $(this).val(); //页面
	    	   jxsname = "'"+$(this).val()+"'"; //后台
	    	   temp = spCodesTemp; //多了取一个放在控件上
	       }else{
	    	   spCodesTemp += (","+$(this).val());
	    	   jxsname += (","+"'"+$(this).val()+"'");
	       }
	       etdata.push(spCodesTemp);
	      });
	      
	      //jsp页面展示部分
	      if(etdata.length > 1){
	    	  $.each(etdata, function(i, mess){
	    		  temp_areapm = temp+'等';
		      });
	      }else{
	    	  temp_areapm = spCodesTemp; 
	      }  
  	}
}

function toThousands(num) {
    var result = [ ], counter = 0;
    num = (num || 0).toString().split('');
    for (var i = num.length - 1; i >= 0; i--) {
        counter++;
        result.unshift(num[i]);
        if (!(counter % 3) && i != 0) { result.unshift(','); }
    }
    return result.join('');
}
function toDecimal(x) {   
            var f = parseFloat(x);              

if (isNaN(f)) {   
                return;              

}              

f = Math.round(x*100)/100;              

return f;          

}    

areaList();